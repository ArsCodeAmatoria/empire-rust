# Empire-Rust CI/CD Pipeline
# This workflow runs tests, security checks, and documentation verification

name: CI

# Trigger workflow on push to main and pull requests
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Set environment variables
env:
  CARGO_TERM_COLOR: always

# Define jobs
jobs:
  # Test job - runs tests and checks code quality
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3
      
      <!-- Install Rust -->
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      
      <!-- Cache Dependencies -->
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      
      <!-- Check Format -->
      - name: Check formatting
        run: cargo fmt --all -- --check
      
      <!-- Run Clippy -->
      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
      
      <!-- Run Tests -->
      - name: Run tests
        run: cargo test --all-features
      
      <!-- Build Release -->
      - name: Build release
        run: cargo build --release
  
  <!-- Security Job -->
  security:
    name: Security
    runs-on: ubuntu-latest
    
    steps:
      <!-- Checkout -->
      - name: Checkout code
        uses: actions/checkout@v3
      
      <!-- Install Rust -->
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      
      <!-- Run Audit -->
      - name: Run cargo audit
        uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          arguments: --ignore RUSTSEC-2020-0071 --ignore RUSTSEC-2020-0159
  
  # Documentation job - verifies documentation
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3
      
      # Install Rust toolchain with docs
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rust-docs
      
      # Check documentation
      - name: Check documentation
        run: cargo doc --no-deps --document-private-items 